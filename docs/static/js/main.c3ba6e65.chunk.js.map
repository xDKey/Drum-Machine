{"version":3,"sources":["DrumMachine/padList.js","DrumPad/DrumPad.js","PowerToggle/PowerToggle.js","DrumMachine/DrumMachine.js","App.js","index.js"],"names":["soundList","padList","map","key","index","soundSrc","DrumPad","id","playSound","pressedKey","useState","className","setClassName","ref","useRef","padKey","toUpperCase","useEffect","setTimeout","current","onClick","onPlay","src","PowerToggle","isPowerOn","setIsPowerOn","justifyContent","style","setStyle","DrumMachine","setPressedKey","mainWindow","focus","sound","currentTime","play","drumPadList","pad","onKeyPress","e","tabIndex","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NACMA,EAAY,CAChB,2DACA,2DACA,2DACA,6DACA,2DACA,yDACA,6DACA,6DACA,0DAGWC,EAbU,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAajCC,KAAI,SAACC,EAAKC,GAAN,MAAiB,CAACD,MAAKE,SAAUL,EAAUI,O,cCgB/DE,EA1BC,SAAC,GAA+C,IAA5CC,EAA2C,EAA3CA,GAAIF,EAAuC,EAAvCA,SAAUG,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,WAAkB,EAC3BC,mBAAS,YADkB,mBACtDC,EADsD,KAC3CC,EAD2C,KAEvDC,EAAMC,mBACNC,EAASR,EAAGS,cAClBC,qBAAU,WACRC,YAAW,kBAAMN,EAAa,cAAa,QAGzCH,IAAeF,GAAIC,EAAUK,EAAIM,SAWrC,OACE,sBAAKC,QANa,WAClBZ,EAAUK,EAAIM,UAKaR,UAAWA,EAAWJ,GAAIA,EAArD,cAA2DQ,EACzD,uBAAOF,IAAKA,EAAKF,UAAU,OAAOU,OAXtB,WACdT,EAAa,qBAUwCL,GAAIQ,EAAQO,IAAKjB,QCF3DkB,G,MAnBK,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAAmB,EACvBf,mBAAS,CAACgB,eAAgB,eADH,mBAC1CC,EAD0C,KACnCC,EADmC,KAUjD,OAPAX,qBAAU,WAENW,EADFJ,EACW,CAACE,eAAgB,cAEjB,CAACA,eAAgB,eAC3B,CAACF,IAGA,sBAAKb,UAAU,SAASS,QAAS,kBAAMK,GAAcD,IAArD,kBAEE,qBAAKb,UAAU,eAAegB,MAAOA,EAArC,SACI,qBAAKhB,UAAU,wBCyBdkB,G,MAnCK,WAAO,IAAD,EACYnB,oBAAS,GADrB,mBACfc,EADe,KACJC,EADI,OAEcf,mBAAS,MAFvB,mBAEfD,EAFe,KAEHqB,EAFG,KAIhBC,EAAajB,mBAEnBG,qBAAU,WACRc,EAAWZ,QAAQa,UAClB,IAEH,IAAMxB,EAAY,SAACyB,GACbT,IACAS,EAAMC,YAAc,EACpBD,EAAME,QAERjB,YAAW,kBAAMY,EAAc,QAAO,IAIpCM,EAAcnC,EAAQC,KAAI,SAAAmC,GAAG,OAAI,cAAC,EAAD,CAAS9B,GAAI8B,EAAIlC,IAAKE,SAAUgC,EAAIhC,SAAwBG,UAAWA,EAAWC,WAAYA,GAA3C4B,EAAIlC,QAE9F,OACE,qBAAKQ,UAAU,MAAf,SACE,sBAAKJ,GAAG,eAAe+B,WAAY,SAACC,GAAD,OAAOT,EAAcS,EAAEpC,MAAMqC,SAAU,EAAG3B,IAAKkB,EAAlF,UACE,qBAAKxB,GAAG,UAAR,SACG6B,IAEH,qBAAK7B,GAAG,UAAR,SACI,cAAC,EAAD,CAAaiB,UAAWA,EAAWC,aAAcA,aC7BhDgB,EAJH,WACV,OAAO,cAAC,EAAD,KCCTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c3ba6e65.chunk.js","sourcesContent":["export const keyList = ['q', 'w', 'e', 'a', 's', 'd', 'z', 'x', 'c']\nconst soundList = [\n  'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3',\n  'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3',\n  'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3',\n  'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3',\n  'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3',\n  'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3',\n  'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3',\n  'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3',\n  'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\n]\n\nexport const padList = keyList.map((key, index) => ({key, soundSrc: soundList[index]}))\n\n\n// https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\n// https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\n// https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\n// https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\n// https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\n// https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\n// https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\n// https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\n// https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3\n\n// https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3\n// https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3\n// https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3\n// https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3\n// https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3\n// https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3\n// https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3\n// https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3\n// https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3","import { useState, useEffect, useRef } from 'react'\nimport './DrumPad.css'\n\nconst DrumPad = ( { id, soundSrc, playSound, pressedKey } ) => {\n  const [className, setClassName] = useState('drum-pad')\n  const ref = useRef()\n  const padKey = id.toUpperCase()\n  useEffect(() => {\n    setTimeout(() => setClassName('drum-pad'), 100)\n  })\n\n  if (pressedKey === id) playSound(ref.current)\n\n  const isPress = () => {\n    setClassName('drum-pad onpress')\n  }\n\n  const clickHandle = () => {\n    playSound(ref.current)\n  }\n  \n\n  return (\n    <div onClick={clickHandle} className={className} id={id}> {padKey}\n      <audio ref={ref} className='clip' onPlay={isPress} id={padKey} src={soundSrc}></audio>\n    </div>\n  )\n}\n\nexport default DrumPad","import { useState, useEffect } from 'react'\nimport './PowerToggle.css'\n\nconst PowerToggle = ({ isPowerOn, setIsPowerOn }) => {\n    const [style, setStyle] = useState({justifyContent: 'flex-start'})\n\n    useEffect(() => {\n      isPowerOn ? \n        setStyle({justifyContent: 'flex-start'})\n        :\n        setStyle({justifyContent: 'flex-end'})\n    }, [isPowerOn])\n    \n    return (\n        <div className='toggle' onClick={() => setIsPowerOn(!isPowerOn)}>\n          POWER\n          <div className='toggle_outer' style={style}>\n              <div className='toggle_inner'></div>\n          </div>\n        </div>\n    )\n}\nexport default PowerToggle","import { useState, useRef, useEffect } from 'react'\nimport { padList } from './padList'\nimport DrumPad from '../DrumPad/DrumPad'\nimport PowerToggle from '../PowerToggle/PowerToggle'\nimport './DrumMachine.css'\n\n\nconst DrumMachine = () => {\n    const [isPowerOn, setIsPowerOn] = useState(true)\n    const [pressedKey, setPressedKey] = useState(null)\n    \n    const mainWindow = useRef()\n\n    useEffect(() => {\n      mainWindow.current.focus()\n    }, [])\n\n    const playSound = (sound) => {\n      if (isPowerOn) {\n          sound.currentTime = 0\n          sound.play()\n        }\n        setTimeout(() => setPressedKey(null), 1)\n        \n    }\n\n    const drumPadList = padList.map(pad => <DrumPad id={pad.key} soundSrc={pad.soundSrc} key={pad.key} playSound={playSound} pressedKey={pressedKey}/>)\n\n    return (\n      <div className=\"App\" >\n        <div id='drum-machine' onKeyPress={(e) => setPressedKey(e.key)} tabIndex={0} ref={mainWindow}>\n          <div id='display'>\n            {drumPadList}\n          </div>\n          <div id='control'>\n              <PowerToggle isPowerOn={isPowerOn} setIsPowerOn={setIsPowerOn}/>\n          </div>\n        </div>\n      </div>\n    );\n}\n\nexport default DrumMachine\n\n","import DrumMachine from './DrumMachine/DrumMachine'\n\nconst App = () => {\n  return <DrumMachine />\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}